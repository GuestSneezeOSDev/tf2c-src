//-----------------------------------------------------------------------------
//	CLIENT_TF2CLASSIC.VPC
//
//	Project Script
//-----------------------------------------------------------------------------

// This causes the VPC to generate post-build steps to copy to a folder called tf2classic-beta instead of the usual tf2classic. Useful for 1-click debugging!
$Macro SRCDIR		"..\.."
$Include "$SRCDIR\game\tf2c_beta.vpc"
$Macro GAMENAME 	"tf2classic"
$Include "$SRCDIR\game\client\client_base.vpc"

// A valid https URL that points to a .txt document that clients will download every game launch
// containing ip address that they will be prevented from connecting to
// Format:
/*
# comment
127.0.0.1
127.0.0.2
127.0.0.3
127.0.0.4
*/
$Macro BLACKLISTS_URL "https://tf2classic.com/api/bad.txt"
// A URL for your users to visit to report a server being incorrectly marked as malicious
$Macro BLACKLISTS_CONTACT_URL "https://tf2classic.com/"

// A valid https URL that points to a document containing a valid Sentry.IO DSN (including self hosted)
// This is literally a text page with the url of your sentry instance as the content, NOT the actual url of your sentry instance wholesale
// This is so you can change this value on the fly without recompiling your entire project
$Macro SENTRY_URL                    "https://tf2classic.org/sentry"
$Macro SENTRY_PRIVACY_POLICY_URL     "https://tf2classic.com/privacy"
$Macro SENTRY_RELEASE_VERSION        "2.2.0-dev-01.13.24"
$Include "$SRCDIR\game\shared\sdk13-gigalib\sdk13-gigalib.vpc"
$Configuration
{
    $Compiler
    {
        // Enable bytepatching engine binaries with various fixes and tweaks
        $PreprocessorDefinitions         "$BASE;BIN_PATCHES"

        // Enable detouring engine functions with various fixes and tweaks, including an anti server lag measure
        // similar to tf2's net_chan_limit_msec
        // also required for hooking other engine funcs for misc functionality
        $PreprocessorDefinitions            "$BASE;ENGINE_DETOURS"

        // Enable blacklisting certain server IPs from all clients
        // REQUIRES engine detours
        $PreprocessorDefinitions            "$BASE;BLACKLISTS"
        $PreprocessorDefinitions            "$BASE;BLACKLISTS_URL=$QUOTE$BLACKLISTS_URL$QUOTE"
        $PreprocessorDefinitions            "$BASE;BLACKLISTS_CONTACT_URL=$QUOTE$BLACKLISTS_CONTACT_URL$QUOTE"

        // Enable optionally flushing server downloadables every time the client disconnects from a server
        // this includes sprays, all custom content, and map overrides, with the first two being controlled by client cvars,
        // and map overrides being done automatically to prevent servers from abusing clients
        // see cl_flush_sprays_on_dc (default 1) and cl_flush_downloads_on_dc (default 0)
        // REQUIRES engine detours
        $PreprocessorDefinitions            "$BASE;FLUSH_DLS"

        // Enable SentryIO telemetry / crash reporting
        // You *NEED* a privacy policy if you want to not run afoul of the GDPR
        // REQUIERS sdkcurl
        $PreprocessorDefinitions            "$BASE;SDKSENTRY"
        $PreprocessorDefinitions            "$BASE;SENTRY_URL=$QUOTE$SENTRY_URL$QUOTE"
        $PreprocessorDefinitions            "$BASE;SENTRY_PRIVACY_POLICY_URL=$QUOTE$SENTRY_PRIVACY_POLICY_URL$QUOTE"
        $PreprocessorDefinitions            "$BASE;SENTRY_RELEASE_VERSION=$QUOTE$SENTRY_RELEASE_VERSION$QUOTE"

        // Enable modern CURL
        $PreprocessorDefinitions            "$BASE;SDKCURL"

    }

    $Linker
    {
        $AdditionalDependencies         "$BASE wsock32.lib" [$WIN32]
    }
}
// </sdk13-gigalib>


$Configuration
{
	$Compiler
	{
		$AdditionalIncludeDirectories		"$BASE;tf\vgui,.\tf,$SRCDIR\game\shared\tf,$SRCDIR\game\shared\Multiplayer,$SRCDIR\game\shared\econ"
		$PreprocessorDefinitions			"$BASE;TF_CLASSIC_CLIENT;GLOWS_ENABLE;VOTING_ENABLED;USE_MONITORS;TF_GENERATOR"
	}

	$Linker
	{
		$AdditionalDependencies			"$BASE wsock32.lib" [$WIN32]
	}
}

$Project "Client (TF)"
{
	$Folder	"Source Files"
	{
		$File    "$SRCDIR\public\_gcc_math_stubs.c" [$POSIX]

		-$File	"$SRCDIR\game\shared\weapon_parse_default.cpp"
		-$File	"$SRCDIR\game\shared\teamplayroundbased_gamerules.cpp"

		$File	"hud_voicestatus.cpp"
		$File	"voice_menu.cpp"
		$File	"$SRCDIR\game\shared\playerclass_info_parse.cpp"
		$File	"$SRCDIR\game\shared\playerclass_info_parse.h"
		$File	"TeamBitmapImage.cpp"
		$File	"hud_vguiscreencursor.cpp"
		$File	"hud_baseachievement_tracker.cpp"
		$File	"hud_baseachievement_tracker.h"
		$File	"hud_base_account.cpp"
		$File	"hud_base_account.h"
		$File	"hud_vote.cpp"
		$File	"hud_vote.h"
		$File	"bsp_utils.cpp"
		$File	"bsp_utils.h"
		$File	"c_baselesson.cpp"
		$File	"c_baselesson.h"
		$File	"c_gameinstructor.cpp"
		$File	"c_gameinstructor.h"
		$File	"hud_locator_target.cpp"
		$File	"hud_locator_target.h"
		$File	"shaderapihack.h"
		$File	"c_postprocesscontroller.cpp"
		$File	"c_postprocesscontroller.h"
		$File	"c_env_dof_controller.cpp"
		$File	"c_env_global_light.cpp"
		$File	"worldlight.cpp"
		$File	"worldlight.h"
		$File	"c_beamspotlight.cpp"

		$File	"$SRCDIR\public\zip_utils.h"
		$File	"$SRCDIR\public\zip_utils.cpp"
		{
			$Configuration
			{
				$Compiler
				{
					$Create/UsePrecompiledHeader	"Not Using Precompiled Headers"
				}
			}
		}

		$Folder	"Multiplayer"
		{
			$File	"$SRCDIR\game\shared\Multiplayer\multiplayer_animstate.cpp"
			$File	"$SRCDIR\game\shared\Multiplayer\multiplayer_animstate.h"
		}
		
		$Folder	"Econ"
		{
			$File	"$SRCDIR\game\shared\econ\attribute_manager.cpp"
			$File	"$SRCDIR\game\shared\econ\attribute_manager.h"
			$File	"$SRCDIR\game\shared\econ\econ_entity.cpp"
			$File	"$SRCDIR\game\shared\econ\econ_entity.h"
			$File	"$SRCDIR\game\shared\econ\econ_item_schema.cpp"
			$File	"$SRCDIR\game\shared\econ\econ_item_schema.h"
			$File	"$SRCDIR\game\shared\econ\econ_item_system.cpp"
			$File	"$SRCDIR\game\shared\econ\econ_item_system.h"
			$File	"$SRCDIR\game\shared\econ\econ_wearable.cpp"
			$File	"$SRCDIR\game\shared\econ\econ_wearable.h"
			$File	"$SRCDIR\game\shared\econ\econ_item_view.cpp"
			$File	"$SRCDIR\game\shared\econ\econ_item_view.h"
			$File	"$SRCDIR\game\shared\econ\game_item_schema.h"
			$File	"$SRCDIR\game\shared\econ\ihasattributes.h"
		}

		$Folder "NextBot"
		{
			$File	"NextBot\c_NextBot.cpp"
			$File	"NextBot\c_NextBot.h"
		}

		$Folder	"TF"
		{
			$File	"tf\c_baseobject.cpp"
			$File	"tf\c_baseobject.h"
			$File	"tf\c_droppedmagazine.cpp"
			$File	"tf\c_droppedmagazine.h"
			$File	"tf\c_func_capture_zone.cpp"
			$File	"tf\c_func_capture_zone.h"
			$File	"tf\c_func_forcefield.cpp"
			$File	"tf\c_func_filter_visualizer.cpp"
			$File	"tf\c_func_respawnroom.cpp"
			$File	"tf\c_obj_dispenser.cpp"
			$File	"tf\c_obj_dispenser.h"
			$File	"tf\c_obj_sapper.cpp"
			$File	"tf\c_obj_sapper.h"
			$File	"tf\c_obj_sentrygun.cpp"
			$File	"tf\c_obj_sentrygun.h"
			$File	"tf\c_obj_teleporter.cpp"
			$File	"tf\c_obj_teleporter.h"
			$File	"tf\c_obj_jumppad.cpp"
			$File	"tf\c_obj_jumppad.h"
			$File	"tf\c_playerattachedmodel.cpp"
			$File	"tf\c_playerattachedmodel.h"
			$File	"tf\c_tf_ammo_pack.cpp"
			$File	"tf\player_vs_environment\c_tf_base_boss.cpp"
			$File	"tf\player_vs_environment\c_tf_base_boss.h"
			$File	"tf\c_tf_fx.cpp"
			$File	"tf\c_tf_fx.h"
			$File	"tf\c_tf_glow.cpp"
			$File	"tf\c_tf_glow.h"
			$File	"tf\c_tf_mvm_boss_progress_user.cpp"
			$File	"tf\c_tf_mvm_boss_progress_user.h"
			$File	"tf\c_tf_objective_resource.cpp"
			$File	"tf\c_tf_objective_resource.h"
			$File	"tf\c_tf_player.cpp"
			$File	"tf\c_tf_player.h"
			$File	"tf\c_tf_playerclass.h"
			$File	"tf\c_tf_playerresource.cpp"
			$File	"tf\c_tf_playerresource.h"
			$File	"tf\c_tf_projectile_arrow.cpp"
			$File	"tf\c_tf_projectile_arrow.h"
			$File	"tf\c_tf_projectile_rocket.cpp"
			$File	"tf\c_tf_projectile_rocket.h"
			$File	"tf\c_tf_spymask.cpp"
			$File	"tf\c_tf_spymask.h"
			$File	"tf\c_tf_stickybolt.cpp"
			$File	"tf\c_tf_taunt_prop.cpp"
			$File	"tf\c_tf_taunt_prop.h"
			$File	"tf\c_tf_team.cpp"
			$File	"tf\c_tf_team.h"
			$File	"tf\c_tf_train_watcher.cpp"
			$File	"tf\c_tf_train_watcher.h"
			//$File	"tf\c_tf_vehicle_jeep.cpp"
			//$File	"tf\c_tf_vehicle_jeep.h"
			$File	"tf\c_tf_viewmodeladdon.cpp"
			$File	"tf\c_tf_viewmodeladdon.h"
			$File	"tf\c_tf_weapon_builder.cpp"
			$File	"tf\c_tf_weapon_builder.h"
			$File	"tf\clientmode_tf.cpp"
			$File	"tf\clientmode_tf.h"
			$File	"tf\econ_notifications.cpp"
			$File	"tf\econ_notifications.h"
			$File	"tf\teammaterialproxy.cpp"
			$File	"tf\tf_autorp.cpp"
			$File	"tf\tf_autorp.h"
			$File	"tf\tf_fx_blood.cpp"
			$File	"tf\tf_fx_ejectbrass.cpp"
			$File	"tf\tf_fx_explosions.cpp"
			$File	"tf\tf_fx_impacts.cpp"
			$File	"tf\tf_fx_muzzleflash.cpp"
			$File	"tf\tf_fx_muzzleflash.h"
			$File	"tf\tf_fx_particleeffect.cpp"
			$File	"tf\tf_fx_taunteffects.cpp"
			$File	"tf\tf_fx_tracers.cpp"
			$File	"tf\tf_hud_account.cpp"
			$File	"tf\tf_hud_achievement_notification.cpp"
			$File	"tf\tf_hud_achievement_notification.h"
			$File	"tf\tf_hud_achievement_tracker.cpp"
			$File	"tf\tf_hud_alert.cpp"
			$File	"tf\tf_hud_ammostatus.cpp"
			$File	"tf\tf_hud_ammostatus.h"
			$File	"tf\tf_hud_annotationspanel.cpp"
			$File	"tf\tf_hud_annotationspanel.h"
			$File	"tf\tf_hud_arena_class_layout.cpp"
			$File	"tf\tf_hud_arena_class_layout.h"
			$File	"tf\tf_hud_arena_notification.cpp"
			$File	"tf\tf_hud_arena_notification.h"
			$File	"tf\tf_hud_arena_player_count.cpp"
			$File	"tf\tf_hud_arena_player_count.h"
			$File	"tf\tf_hud_arena_winpanel.cpp"
			$File	"tf\tf_hud_arena_winpanel.h"
			$File	"tf\tf_hud_betastamp.cpp"
			$File	"tf\tf_hud_betastamp.h"
			$File	"tf\tf_hud_building_status.cpp"
			$File	"tf\tf_hud_building_status.h"
			$File	"tf\tf_hud_chat.cpp"
			$File	"tf\tf_hud_chat.h"
			$File	"tf\tf_hud_crosshair.cpp"
			$File	"tf\tf_hud_crosshair.h"
			$File	"tf\tf_hud_controlpointicons.cpp"
			$File	"tf\tf_hud_controlpointicons.h"
			$File	"tf\tf_hud_damageaccount_panel.cpp"
			$File	"tf\tf_hud_damageindicator.cpp"
			$File	"tf\tf_hud_deathnotice.cpp"
			$File	"tf\tf_hud_demomancharge.cpp"
			$File	"tf\tf_hud_demomanpipes.cpp"
			$File	"tf\tf_hud_disguise_status.cpp"
			$File	"tf\tf_hud_distance_meter.cpp"
			$File	"tf\tf_hud_domination.cpp"
			$File	"tf\tf_hud_domination.h"
			$File	"tf\tf_hud_escort.cpp"
			$File	"tf\tf_hud_escort.h"
			$File	"tf\tf_hud_flagstatus.cpp"
			$File	"tf\tf_hud_flagstatus.h"
			$File	"tf\tf_hud_freezepanel.cpp"
			$File	"tf\tf_hud_freezepanel.h"
			$File	"tf\tf_hud_itemeffectmeter.cpp"
			$File	"tf\tf_hud_itemeffectmeter.h"
			$File	"tf\tf_hud_match_status.cpp"
			$File	"tf\tf_hud_match_status.h"
			$File	"tf\tf_hud_mediccallers.cpp"
			$File	"tf\tf_hud_mediccallers.h"
			$File	"tf\tf_hud_mediccharge.cpp"
			$File	"tf\tf_hud_anchorcharge.cpp"
			$File	"tf\tf_hud_menu_engy_build.cpp"
			$File	"tf\tf_hud_menu_engy_build.h"
			$File	"tf\tf_hud_menu_engy_destroy.cpp"
			$File	"tf\tf_hud_menu_engy_destroy.h"
			$File	"tf\tf_hud_menu_spy_disguise.cpp"
			$File	"tf\tf_hud_menu_spy_disguise.h"
			$File	"tf\tf_hud_menu_taunt_selection.cpp"
			$File	"tf\tf_hud_menu_taunt_selection.h"
			$File	"tf\tf_hud_notification_panel.cpp"
			$File	"tf\tf_hud_notification_panel.h"
			$File	"tf\tf_hud_objectivestatus.cpp"
			$File	"tf\tf_hud_objectivestatus.h"
			$File	"tf\tf_hud_playerstatus.cpp"
			$File	"tf\tf_hud_playerstatus.h"
			$File	"tf\tf_hud_powersiege.h"
			$File	"tf\tf_hud_powersiege.cpp"
			$File	"tf\tf_hud_scope.cpp"
			$File	"tf\tf_hud_screenoverlays.cpp"
			$File	"tf\tf_hud_screenoverlays.h"
			$File	"tf\tf_hud_stalemate.cpp"
			$File	"tf\tf_hud_statpanel.cpp"
			$File	"tf\tf_hud_statpanel.h"
			$File	"tf\tf_hud_target_id.cpp"
			$File	"tf\tf_hud_target_id.h"
			$File	"tf\tf_hud_teamgoal.cpp"
			$File	"tf\tf_hud_teamswitch.cpp"
			$File	"tf\tf_hud_vip.cpp"
			$File	"tf\tf_hud_vip.h"
			$File	"tf\tf_hud_waitingforplayers_panel.cpp"
			$File	"tf\tf_hud_weaponselection.cpp"
			$File	"tf\tf_hud_winpanel.cpp"
			$File	"tf\tf_hud_winpanel.h"
			$File	"tf\tf_input_main.cpp"
			$File	"tf\tf_notificationmanager.cpp"
			$File	"tf\tf_notificationmanager.h"
			$File	"tf\tf_prediction.cpp"
			$File	"tf\tf_presence.cpp"
			$File	"tf\tf_presence.h"
			$File	"tf\tf_steamstats.cpp"
			$File	"tf\tf_steamstats.h"
			$File	"tf\tf_tips.cpp"
			$File	"tf\tf_tips.h"
			$File	"tf\tf_viewrender.cpp"
			$File	"tf\tf_viewrender.h"
			$File	"tf\tf_colorblind_helper.cpp"
			$File	"tf\tf_colorblind_helper.h"
			$File	"tf\tf_hud_patienthealthbar.cpp"
			$File	"tf\tf_hud_patienthealthbar.h"

			$Folder	"vgui"
			{
				$Folder	"Controls"
				{
					$File	"tf\vgui\controls\tf_advbutton.cpp"
					$File	"tf\vgui\controls\tf_advbutton.h"
					$File	"tf\vgui\controls\tf_advbuttonbase.cpp"
					$File	"tf\vgui\controls\tf_advbuttonbase.h"
					$File	"tf\vgui\controls\tf_advcheckbutton.cpp"
					$File	"tf\vgui\controls\tf_advcheckbutton.h"
					$File	"tf\vgui\controls\tf_advitembutton.cpp"
					$File	"tf\vgui\controls\tf_advitembutton.h"
					$File	"tf\vgui\controls\tf_advpanellistpanel.cpp"
					$File	"tf\vgui\controls\tf_advpanellistpanel.h"
					$File	"tf\vgui\controls\tf_advslider.cpp"
					$File	"tf\vgui\controls\tf_advslider.h"
					$File	"tf\vgui\controls\tf_advtabs.cpp"
					$File	"tf\vgui\controls\tf_advtabs.h"
					$File	"tf\vgui\controls\tf_cvarslider.cpp"
					$File	"tf\vgui\controls\tf_cvarslider.h"
					$File	"tf\vgui\controls\tf_cvartogglecheckbutton.cpp"
					$File	"tf\vgui\controls\tf_cvartogglecheckbutton.h"
					$File	"tf\vgui\controls\tf_rotatingpanel.cpp"
					$File	"tf\vgui\controls\tf_rotatingpanel.h"
					$File	"tf\vgui\controls\tf_scriptobject.cpp"
					$File	"tf\vgui\controls\tf_scriptobject.h"
					$File	"tf\vgui\controls\tf_vcontrolslistpanel.cpp"
					$File	"tf\vgui\controls\tf_vcontrolslistpanel.h"
				}
				
				$Folder	"Panels"
				{
					$File	"tf\vgui\panels\tf_achievementsdialog.cpp"
					$File	"tf\vgui\panels\tf_achievementsdialog.h"
					$File	"tf\vgui\panels\tf_backgroundpanel.cpp"
					$File	"tf\vgui\panels\tf_backgroundpanel.h"
					$File	"tf\vgui\panels\tf_createserverdialog.cpp"
					$File	"tf\vgui\panels\tf_createserverdialog.h"
					$File	"tf\vgui\panels\tf_dialogpanelbase.cpp"
					$File	"tf\vgui\panels\tf_dialogpanelbase.h"
					$File	"tf\vgui\panels\tf_itemtooltippanel.cpp"
					$File	"tf\vgui\panels\tf_itemtooltippanel.h"
					$File	"tf\vgui\panels\tf_loadingscreen.cpp"
					$File	"tf\vgui\panels\tf_loadingscreen.h"
					$File	"tf\vgui\panels\tf_loadoutpanel.cpp"
					$File	"tf\vgui\panels\tf_loadoutpanel.h"
					$File	"tf\vgui\panels\tf_mainmenupanel.cpp"
					$File	"tf\vgui\panels\tf_mainmenupanel.h"
					$File	"tf\vgui\panels\tf_menupanelbase.cpp"
					$File	"tf\vgui\panels\tf_menupanelbase.h"
					$File	"tf\vgui\panels\tf_notificationpanel.cpp"
					$File	"tf\vgui\panels\tf_notificationpanel.h"
					$File	"tf\vgui\panels\tf_optionsadvancedpanel.cpp"
					$File	"tf\vgui\panels\tf_optionsadvancedpanel.h"
					$File	"tf\vgui\panels\tf_optionsaudiopanel.cpp"
					$File	"tf\vgui\panels\tf_optionsaudiopanel.h"
					$File	"tf\vgui\panels\tf_optionsdialog.cpp"
					$File	"tf\vgui\panels\tf_optionsdialog.h"
					$File	"tf\vgui\panels\tf_optionskeyboardpanel.cpp"
					$File	"tf\vgui\panels\tf_optionskeyboardpanel.h"
					$File	"tf\vgui\panels\tf_optionsmousepanel.cpp"
					$File	"tf\vgui\panels\tf_optionsmousepanel.h"
					$File	"tf\vgui\panels\tf_optionsvideopanel.cpp"
					$File	"tf\vgui\panels\tf_optionsvideopanel.h"
					$File	"tf\vgui\panels\tf_tooltippanel.cpp"
					$File	"tf\vgui\panels\tf_tooltippanel.h"
					$File	"tf\vgui\panels\tf_quitdialogpanel.cpp"
					$File	"tf\vgui\panels\tf_quitdialogpanel.h"
					$File	"tf\vgui\panels\tf_shadebackgroundpanel.cpp"
					$File	"tf\vgui\panels\tf_shadebackgroundpanel.h"
					$File	"tf\vgui\panels\tf_statsummarydialog.cpp"
					$File	"tf\vgui\panels\tf_statsummarydialog.h"
				}
				
				$File	"tf\vgui\backgroundpanel.cpp"
				$File	"tf\vgui\backgroundpanel.h"
				$File	"tf\vgui\ObjectControlPanel.cpp"
				$File	"tf\vgui\ObjectControlPanel.h"
				$File	"tf\vgui\tf_classmenu.cpp"
				$File	"tf\vgui\tf_classmenu.h"
				$File	"tf\vgui\tf_clientscoreboard.cpp"
				$File	"tf\vgui\tf_clientscoreboard.h"
				$File	"tf\vgui\tf_fourteamscoreboard.cpp"
				$File	"tf\vgui\tf_fourteamscoreboard.h"
				$File	"tf\vgui\tf_controls.cpp"
				$File	"tf\vgui\tf_controls.h"
				$File	"tf\vgui\tf_imagepanel.cpp"
				$File	"tf\vgui\tf_imagepanel.h"
				$File	"tf\vgui\tf_intromenu.cpp"
				$File	"tf\vgui\tf_intromenu.h"
				$File	"tf\vgui\tf_itemmodelpanel.cpp"
				$File	"tf\vgui\tf_itemmodelpanel.h"
				$File	"tf\vgui\tf_mainmenu.cpp"
				$File	"tf\vgui\tf_mainmenu.h"
				$File	"tf\vgui\tf_mapinfomenu.cpp"
				$File	"tf\vgui\tf_mapinfomenu.h"
				$File	"tf\vgui\tf_playermodelpanel.cpp"
				$File	"tf\vgui\tf_playermodelpanel.h"
				$File	"tf\vgui\tf_roundinfo.cpp"
				$File	"tf\vgui\tf_roundinfo.h"
				$File	"tf\vgui\tf_spectatorgui.cpp"
				$File	"tf\vgui\tf_spectatorgui.h"
				$File	"tf\vgui\tf_statsummary.cpp"
				$File	"tf\vgui\tf_statsummary.h"
				$File	"tf\vgui\tf_teammenu.cpp"
				$File	"tf\vgui\tf_teammenu.h"
				$File	"tf\vgui\tf_textwindow.cpp"
				$File	"tf\vgui\tf_textwindow.h"
				$File	"tf\vgui\tf_vgui_video.cpp"
				$File	"tf\vgui\tf_vgui_video.h"
				$File	"tf\vgui\tf_viewport.cpp"
				$File	"tf\vgui\tf_viewport.h"
				$File	"tf\vgui\vgui_pda_panel.cpp"
				$File	"tf\vgui\vgui_rootpanel_tf.cpp"
				$File	"tf\vgui\vgui_rootpanel_tf.h"
				$File	"tf\vgui\vgui_rotation_slider.cpp"
				$File	"tf\vgui\vgui_rotation_slider.h"
			}
			
			$Folder	"Shared"
			{
				$Folder	"Weapons"
				{					
					$Folder	"Custom"
					{
						$File	"$SRCDIR\game\shared\tf\tf_weapon_coilgun.cpp"
						$File	"$SRCDIR\game\shared\tf\tf_weapon_coilgun.h"
						$File	"$SRCDIR\game\shared\tf\tf_weapon_grenade_mirv.cpp"
						$File	"$SRCDIR\game\shared\tf\tf_weapon_grenade_mirv.h"
						$File	"$SRCDIR\game\shared\tf\tf_weapon_hunterrifle.cpp"
						$File	"$SRCDIR\game\shared\tf\tf_weapon_hunterrifle.h"
						$File	"$SRCDIR\game\shared\tf\tf_weapon_mirv.cpp"
						$File	"$SRCDIR\game\shared\tf\tf_weapon_mirv.h"
						$File	"$SRCDIR\game\shared\tf\tf_weapon_nailgun.cpp"
						$File	"$SRCDIR\game\shared\tf\tf_weapon_nailgun.h"
						$File	"$SRCDIR\game\shared\tf\tf_weapon_tranq.cpp"
						$File	"$SRCDIR\game\shared\tf\tf_weapon_tranq.h"
						$File	"$SRCDIR\game\shared\tf\tf_weapon_umbrella.cpp"
						$File	"$SRCDIR\game\shared\tf\tf_weapon_umbrella.h"
						$File	"$SRCDIR\game\shared\tf\tf_weapon_taser.cpp"
						$File	"$SRCDIR\game\shared\tf\tf_weapon_taser.h"
						$File	"$SRCDIR\game\shared\tf\tf_weapon_aagun.cpp"
						$File	"$SRCDIR\game\shared\tf\tf_weapon_aagun.h"
						$File	"$SRCDIR\game\shared\tf\tf_weapon_detonator.cpp"
						$File	"$SRCDIR\game\shared\tf\tf_weapon_detonator.h"
						$File	"$SRCDIR\game\shared\tf\tf_weapon_russianroulette.cpp"
						$File	"$SRCDIR\game\shared\tf\tf_weapon_russianroulette.h"
						$File	"$SRCDIR\game\shared\tf\tf_weapon_throwingknife.cpp"
						$File	"$SRCDIR\game\shared\tf\tf_weapon_throwingknife.h"
						$File	"$SRCDIR\game\shared\tf\tf_weapon_beacon.cpp"
						$File	"$SRCDIR\game\shared\tf\tf_weapon_beacon.h"
						$File	"$SRCDIR\game\shared\tf\tf_weapon_pillstreak.cpp"
						$File	"$SRCDIR\game\shared\tf\tf_weapon_pillstreak.h"
						$File	"$SRCDIR\game\shared\tf\tf_weapon_doubleshotgun.cpp"
						$File	"$SRCDIR\game\shared\tf\tf_weapon_doubleshotgun.h"
						$File	"$SRCDIR\game\shared\tf\tf_weapon_heallauncher.cpp"
						$File	"$SRCDIR\game\shared\tf\tf_weapon_heallauncher.h"
						$File	"$SRCDIR\game\shared\tf\tf_weapon_grenade_healimpact.cpp"
						$File	"$SRCDIR\game\shared\tf\tf_weapon_grenade_healimpact.h"
						$File	"$SRCDIR\game\shared\tf\tf_weapon_generator_uber.cpp"
						$File	"$SRCDIR\game\shared\tf\tf_weapon_generator_uber.h"
						$File	"$SRCDIR\game\shared\tf\tf_weapon_paintballrifle.cpp"
						$File	"$SRCDIR\game\shared\tf\tf_weapon_paintballrifle.h"
						$File	"$SRCDIR\game\shared\tf\tf_weapon_throwable.cpp"
						$File	"$SRCDIR\game\shared\tf\tf_weapon_throwable.h"
						$File	"$SRCDIR\game\shared\tf\tf_weapon_brimstonelauncher.cpp"
						$File	"$SRCDIR\game\shared\tf\tf_weapon_brimstonelauncher.h"
						$File	"$SRCDIR\game\shared\tf\tf_weapon_anchor.cpp"
						$File	"$SRCDIR\game\shared\tf\tf_weapon_anchor.h"
						$File	"$SRCDIR\game\shared\tf\tf_weapon_cyclops.cpp"
						$File	"$SRCDIR\game\shared\tf\tf_weapon_cyclops.h"
						$File	"$SRCDIR\game\shared\tf\tf_weapon_leapknife.cpp"
						$File	"$SRCDIR\game\shared\tf\tf_weapon_leapknife.h"
					}
					
					$File	"$SRCDIR\game\shared\tf\tf_weapon_bat.cpp"
					$File	"$SRCDIR\game\shared\tf\tf_weapon_bat.h"
					$File	"$SRCDIR\game\shared\tf\tf_weapon_bonesaw.cpp"
					$File	"$SRCDIR\game\shared\tf\tf_weapon_bonesaw.h"
					$File	"$SRCDIR\game\shared\tf\tf_weapon_bottle.cpp"
					$File	"$SRCDIR\game\shared\tf\tf_weapon_bottle.h"
					$File	"$SRCDIR\game\shared\tf\tf_weapon_club.cpp"
					$File	"$SRCDIR\game\shared\tf\tf_weapon_club.h"
					$File	"$SRCDIR\game\shared\tf\tf_weapon_compound_bow.cpp"
					$File	"$SRCDIR\game\shared\tf\tf_weapon_compound_bow.h"
					$File	"$SRCDIR\game\shared\tf\tf_weapon_cubemap.cpp"
					$File	"$SRCDIR\game\shared\tf\tf_weapon_cubemap.h"
					$File	"$SRCDIR\game\shared\tf\tf_weapon_fireaxe.cpp"
					$File	"$SRCDIR\game\shared\tf\tf_weapon_fireaxe.h"
					$File	"$SRCDIR\game\shared\tf\tf_weapon_fists.cpp"
					$File	"$SRCDIR\game\shared\tf\tf_weapon_fists.h"
					$File	"$SRCDIR\game\shared\tf\tf_weapon_flamethrower.cpp"
					$File	"$SRCDIR\game\shared\tf\tf_weapon_flamethrower.h"
					$File	"$SRCDIR\game\shared\tf\tf_weapon_flaregun.cpp"
					$File	"$SRCDIR\game\shared\tf\tf_weapon_flaregun.h"
					$File	"$SRCDIR\game\shared\tf\tf_weapon_grenadelauncher.cpp"
					$File	"$SRCDIR\game\shared\tf\tf_weapon_grenadelauncher.h"
					$File	"$SRCDIR\game\shared\tf\tf_weapon_invis.cpp"
					$File	"$SRCDIR\game\shared\tf\tf_weapon_invis.h"
					$File	"$SRCDIR\game\shared\tf\tf_weapon_knife.cpp"
					$File	"$SRCDIR\game\shared\tf\tf_weapon_knife.h"
					$File	"$SRCDIR\game\shared\tf\tf_weapon_lunchbox.cpp"
					$File	"$SRCDIR\game\shared\tf\tf_weapon_lunchbox.h"
					$File	"$SRCDIR\game\shared\tf\tf_weapon_medigun.cpp"
					$File	"$SRCDIR\game\shared\tf\tf_weapon_medigun.h"
					$File	"$SRCDIR\game\shared\tf\tf_weapon_minigun.cpp"
					$File	"$SRCDIR\game\shared\tf\tf_weapon_minigun.h"
					$File	"$SRCDIR\game\shared\tf\tf_weapon_pda.cpp"
					$File	"$SRCDIR\game\shared\tf\tf_weapon_pda.h"
					$File	"$SRCDIR\game\shared\tf\tf_weapon_pipebomblauncher.cpp"
					$File	"$SRCDIR\game\shared\tf\tf_weapon_pipebomblauncher.h"
					$File	"$SRCDIR\game\shared\tf\tf_weapon_pistol.cpp"
					$File	"$SRCDIR\game\shared\tf\tf_weapon_pistol.h"
					$File	"$SRCDIR\game\shared\tf\tf_weapon_revolver.cpp"
					$File	"$SRCDIR\game\shared\tf\tf_weapon_revolver.h"
					$File	"$SRCDIR\game\shared\tf\tf_weapon_riot.cpp"
					$File	"$SRCDIR\game\shared\tf\tf_weapon_riot.h"
					$File	"$SRCDIR\game\shared\tf\tf_weapon_rocketlauncher.cpp"
					$File	"$SRCDIR\game\shared\tf\tf_weapon_rocketlauncher.h"
					$File	"$SRCDIR\game\shared\tf\tf_weapon_shotgun.cpp"
					$File	"$SRCDIR\game\shared\tf\tf_weapon_shotgun.h"
					$File	"$SRCDIR\game\shared\tf\tf_weapon_shovel.cpp"
					$File	"$SRCDIR\game\shared\tf\tf_weapon_shovel.h"
					$File	"$SRCDIR\game\shared\tf\tf_weapon_smg.cpp"
					$File	"$SRCDIR\game\shared\tf\tf_weapon_smg.h"
					$File	"$SRCDIR\game\shared\tf\tf_weapon_sniperrifle.cpp"
					$File	"$SRCDIR\game\shared\tf\tf_weapon_sniperrifle.h"
					$File	"$SRCDIR\game\shared\tf\tf_weapon_syringegun.cpp"
					$File	"$SRCDIR\game\shared\tf\tf_weapon_syringegun.h"
					$File	"$SRCDIR\game\shared\tf\tf_weapon_wrench.cpp"
					$File	"$SRCDIR\game\shared\tf\tf_weapon_wrench.h"
					$File	"$SRCDIR\game\shared\tf\tf_weaponbase.cpp"
					$File	"$SRCDIR\game\shared\tf\tf_weaponbase.h"
					$File	"$SRCDIR\game\shared\tf\tf_weaponbase_gun.cpp"
					$File	"$SRCDIR\game\shared\tf\tf_weaponbase_gun.h"
					$File	"$SRCDIR\game\shared\tf\tf_weaponbase_melee.cpp"
					$File	"$SRCDIR\game\shared\tf\tf_weaponbase_melee.h"
				}
				
				$File	"$SRCDIR\game\shared\tf\achievements_tf.cpp"
				$File	"$SRCDIR\game\shared\tf\achievements_tf.h"
				$File	"$SRCDIR\game\shared\tf\achievements_220_tf.cpp"
				$File	"$SRCDIR\game\shared\tf\achievements_220_tf.h"
				$File	"$SRCDIR\game\shared\tf\baseobject_shared.cpp"
				$File	"$SRCDIR\game\shared\tf\baseobject_shared.h"
				$File	"$SRCDIR\game\shared\tf\tf_condition.cpp"
				$File	"$SRCDIR\game\shared\tf\tf_condition.h"
				$File	"$SRCDIR\game\shared\tf\entity_capture_flag.cpp"
				$File	"$SRCDIR\game\shared\tf\entity_capture_flag.h"
				$File	"$SRCDIR\game\shared\tf\ihasbuildpoints.h"
				$File	"$SRCDIR\game\shared\tf\tf_additionalmodels_manager.cpp"
				$File	"$SRCDIR\game\shared\tf\tf_announcer.cpp"
				$File	"$SRCDIR\game\shared\tf\tf_announcer.h"
				$File	"$SRCDIR\game\shared\tf\tf_baseprojectile.cpp"
				$File	"$SRCDIR\game\shared\tf\tf_baseprojectile.h"
				$File	"$SRCDIR\game\shared\tf\tf_cvar_override.cpp"
				$File	"$SRCDIR\game\shared\tf\tf_fx_shared.cpp"
				$File	"$SRCDIR\game\shared\tf\tf_fx_shared.h"
				$File	"$SRCDIR\game\shared\tf\tf_gamemovement.cpp"
				$File	"$SRCDIR\game\shared\tf\tf_gamerules.cpp"
				$File	"$SRCDIR\game\shared\tf\tf_gamerules.h"
				$File	"$SRCDIR\game\shared\tf\tf_gamerules_vscript.cpp"
				$File	"$SRCDIR\game\shared\tf\tf_gamestats_shared.cpp"
				$File	"$SRCDIR\game\shared\tf\tf_gamestats_shared.h"
				$File	"$SRCDIR\game\shared\tf\tf_inventory.cpp"
				$File	"$SRCDIR\game\shared\tf\tf_inventory.h"
				$File	"$SRCDIR\game\shared\tf\tf_item.cpp"
				$File	"$SRCDIR\game\shared\tf\tf_item.h"
				$File	"$SRCDIR\game\shared\tf\tf_lagcompensation.cpp"
				$File	"$SRCDIR\game\shared\tf\tf_lagcompensation.h"
				$File	"$SRCDIR\game\shared\tf\tf_music_manager.cpp"
				$File	"$SRCDIR\game\shared\tf\tf_music_manager.h"
				$File	"$SRCDIR\game\shared\tf\tf_obj_baseupgrade_shared.cpp"
				$File	"$SRCDIR\game\shared\tf\tf_obj_baseupgrade_shared.h"
				$File	"$SRCDIR\game\shared\tf\tf_player_shared.cpp"
				$File	"$SRCDIR\game\shared\tf\tf_player_shared.h"
				$File	"$SRCDIR\game\shared\tf\tf_playeranimstate.cpp"
				$File	"$SRCDIR\game\shared\tf\tf_playeranimstate.h"
				$File	"$SRCDIR\game\shared\tf\tf_playerclass_info_parse.cpp"
				$File	"$SRCDIR\game\shared\tf\tf_playerclass_shared.cpp"
				$File	"$SRCDIR\game\shared\tf\tf_playerclass_shared.h"
				$File	"$SRCDIR\game\shared\tf\tf_projectile_coil.cpp"
				$File	"$SRCDIR\game\shared\tf\tf_projectile_coil.h"
				$File	"$SRCDIR\game\shared\tf\tf_projectile_flare.cpp"
				$File	"$SRCDIR\game\shared\tf\tf_projectile_flare.h"
				$File	"$SRCDIR\game\shared\tf\tf_projectile_dart.cpp"
				$File	"$SRCDIR\game\shared\tf\tf_projectile_dart.h"
				$File	"$SRCDIR\game\shared\tf\tf_projectile_nail.cpp"
				$File	"$SRCDIR\game\shared\tf\tf_projectile_nail.h"
				$File	"$SRCDIR\game\shared\tf\tf_projectile_throwingknife.cpp"
				$File	"$SRCDIR\game\shared\tf\tf_projectile_throwingknife.h"
				$File	"$SRCDIR\game\shared\tf\tf_projectile_paintball.h"
				$File	"$SRCDIR\game\shared\tf\tf_projectile_paintball.cpp"
				$File	"$SRCDIR\game\shared\tf\tf_projectile_brick.h"
				$File	"$SRCDIR\game\shared\tf\tf_projectile_brick.cpp"
				$File	"$SRCDIR\game\shared\tf\tf_projectile_cyclopsgrenade.h"
				$File	"$SRCDIR\game\shared\tf\tf_projectile_cyclopsgrenade.cpp"
				$File	"$SRCDIR\game\shared\tf\tf_randomizer_manager.cpp"
				$File	"$SRCDIR\game\shared\tf\tf_randomizer_manager.h"
				$File	"$SRCDIR\game\shared\tf\tf_round_timer.cpp"
				$File	"$SRCDIR\game\shared\tf\tf_round_timer.h"
				$File	"$SRCDIR\game\shared\tf\tf_shareddefs.cpp"
				$File	"$SRCDIR\game\shared\tf\tf_shareddefs.h"
				$File	"$SRCDIR\game\shared\tf\tf_usermessages.cpp"
				$File	"$SRCDIR\game\shared\tf\tf_viewmodel.cpp"
				$File	"$SRCDIR\game\shared\tf\tf_viewmodel.h"
				$File	"$SRCDIR\game\shared\tf\tf_weapon_grenade_pipebomb.cpp"
				$File	"$SRCDIR\game\shared\tf\tf_weapon_grenade_pipebomb.h"
				$File	"$SRCDIR\game\shared\tf\tf_weapon_grenade_stickybomb.cpp"
				$File	"$SRCDIR\game\shared\tf\tf_weapon_grenade_stickybomb.h"
				$File	"$SRCDIR\game\shared\tf\tf_weapon_parse.cpp"
				$File	"$SRCDIR\game\shared\tf\tf_weapon_parse.h"
				$File	"$SRCDIR\game\shared\tf\tf_weaponbase_grenadeproj.cpp"
				$File	"$SRCDIR\game\shared\tf\tf_weaponbase_grenadeproj.h"
				$File	"$SRCDIR\game\shared\tf\tf_weaponbase_nail.cpp"
				$File	"$SRCDIR\game\shared\tf\tf_weaponbase_nail.h"
				$File	"$SRCDIR\game\shared\tf\tf_weaponbase_rocket.cpp"
				$File	"$SRCDIR\game\shared\tf\tf_weaponbase_rocket.h"
				$File	"$SRCDIR\game\shared\tf\tf_wearable.cpp"
				$File	"$SRCDIR\game\shared\tf\tf_wearable.h"
				$File	"$SRCDIR\game\shared\tf\tf_generator.cpp"
				$File	"$SRCDIR\game\shared\tf\tf_generator.h"
                $File   "$SRCDIR\public\xxhash\xxhash.h"
                $File   "$SRCDIR\public\xxhash\xxhash.c"
                {
                    $Configuration
                    {
                        $Compiler
                        {
                            $Create/UsePrecompiledHeader    "Not Using Precompiled Headers"
                        }
                    }
                }


                $File   "$SRCDIR\public\sha3\sha3.h"
                $File   "$SRCDIR\public\sha3\sha3.c"
                {
                    $Configuration
                    {
                        $Compiler
                        {
                            $Create/UsePrecompiledHeader    "Not Using Precompiled Headers"
                        }
                    }
                }



                $File   "$SRCDIR\game\shared\tf\chksum_file.cpp"
                $File   "$SRCDIR\game\shared\tf\chksum_file.h"


                $File   "$SRCDIR\game\shared\_cpp_stdlib_on.h"
                $File   "$SRCDIR\game\shared\_cpp_stdlib_off.h"

            }

			$Folder	"Discord"
			{
				$File	"tf\discord\discord-rpc.h"
				$File	"tf\discord\tf2c_discord_rpc.h"
				$File	"tf\discord\tf2c_discord_rpc.cpp"
				$File	"tf\discord\discord_register.h"
				$File	"tf\discord\discord_register_win.cpp"   [$WIN32]
				{
					$Configuration
					{
						$Compiler
						{
							$Create/UsePrecompiledHeader	"Not Using Precompiled Headers"
						}
					}
				}

				$File	"tf\discord\discord_register_linux.cpp" [$LINUX]
				{
					$Configuration
					{
						$Compiler
						{
							$Create/UsePrecompiledHeader	"Not Using Precompiled Headers"
						}
					}
				}
			}
		}
	}

	$Folder	"Link Libraries"
	{
		// src/lib/public , it 'skips' the linux32 directory
		$ImpLib			"$LIBPUBLIC\discord-rpc"	[$WIN32]
		// I had to build both of these myself (for 32 bit), so just be aware
		// -sappho
                $Lib                    libdiscord-rpc	   [$LINUX]

		// For the Alien Swarm particle-based precipitation backport
		$Lib raytrace

		$ImpLib                 SDL2 [$LINUX] // [$SDL]
	}
}

