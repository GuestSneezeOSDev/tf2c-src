//=============================================================================//
//
// Purpose: 
//
//=============================================================================//
#ifndef TF_ANNOUNCER_H
#define TF_ANNOUNCER_H

#ifdef _WIN32
#pragma once
#endif

#include "igamesystem.h"

enum
{
	TF_ANNOUCER_INVALID = -1,
	TF_ANNOUNCER_DING = 0,
	TF_ANNOUNCER_STALEMATE,
	TF_ANNOUNCER_SUDDENDEATH,
	TF_ANNOUNCER_VICTORY,
	TF_ANNOUNCER_DEFEAT,
	TF_ANNOUNCER_OVERTIME,
	TF_ANNOUNCER_ROUNDBEGINS_60SEC,
	TF_ANNOUNCER_ROUNDBEGINS_30SEC,
	TF_ANNOUNCER_ROUNDBEGINS_10SEC,
	TF_ANNOUNCER_ROUNDBEGINS_5SEC,
	TF_ANNOUNCER_ROUNDBEGINS_4SEC,
	TF_ANNOUNCER_ROUNDBEGINS_3SEC,
	TF_ANNOUNCER_ROUNDBEGINS_2SEC,
	TF_ANNOUNCER_ROUNDBEGINS_1SEC,
	TF_ANNOUNCER_ROUNDENDS_5MIN,
	TF_ANNOUNCER_ROUNDENDS_60SEC,
	TF_ANNOUNCER_ROUNDENDS_30SEC,
	TF_ANNOUNCER_ROUNDENDS_10SEC,
	TF_ANNOUNCER_ROUNDENDS_5SEC,
	TF_ANNOUNCER_ROUNDENDS_4SEC,
	TF_ANNOUNCER_ROUNDENDS_3SEC,
	TF_ANNOUNCER_ROUNDENDS_2SEC,
	TF_ANNOUNCER_ROUNDENDS_1SEC,
	TF_ANNOUNCER_TIMEADDED,
	TF_ANNOUNCER_TIMEADDED_TEAM,
	TF_ANNOUNCER_TIMEADDED_ENEMY,
	TF_ANNOUNCER_CTF_ENEMYSTOLEN,
	TF_ANNOUNCER_CTF_ENEMYDROPPED,
	TF_ANNOUNCER_CTF_ENEMYCAPTURED,
	TF_ANNOUNCER_CTF_ENEMYRETURNED,
	TF_ANNOUNCER_CTF_TEAMSTOLEN,
	TF_ANNOUNCER_CTF_TEAMDROPPED,
	TF_ANNOUNCER_CTF_TEAMCAPTURED,
	TF_ANNOUNCER_CTF_TEAMRETURNED,
	TF_ANNOUNCER_AD_ENEMYSTOLEN,
	TF_ANNOUNCER_AD_ENEMYDROPPED,
	TF_ANNOUNCER_AD_ENEMYCAPTURED,
	TF_ANNOUNCER_AD_ENEMYRETURNED,
	TF_ANNOUNCER_AD_TEAMSTOLEN,
	TF_ANNOUNCER_AD_TEAMDROPPED,
	TF_ANNOUNCER_AD_TEAMCAPTURED,
	TF_ANNOUNCER_AD_TEAMRETURNED,
	TF_ANNOUNCER_INVADE_ENEMYSTOLEN,
	TF_ANNOUNCER_INVADE_ENEMYDROPPED,
	TF_ANNOUNCER_INVADE_ENEMYCAPTURED,
	TF_ANNOUNCER_INVADE_TEAMSTOLEN,
	TF_ANNOUNCER_INVADE_TEAMDROPPED,
	TF_ANNOUNCER_INVADE_TEAMCAPTURED,
	TF_ANNOUNCER_INVADE_RETURNED,
	TF_ANNOUNCER_SD_ENEMYSTOLEN,
	TF_ANNOUNCER_SD_ENEMYDROPPED,
	TF_ANNOUNCER_SD_ENEMYCAPTURED,
	TF_ANNOUNCER_SD_TEAMSTOLEN,
	TF_ANNOUNCER_SD_TEAMDROPPED,
	TF_ANNOUNCER_SD_TEAMCAPTURED,
	TF_ANNOUNCER_SD_RETURNED,
	TF_ANNOUNCER_SD_ROUNDSTART,
	TF_ANNOUNCER_CONTROLPOINT_CONTESTED,
	TF_ANNOUNCER_CONTROLPOINT_CONTESTED_NEUTRAL,
	TF_ANNOUNCER_CART_WARNING_ATTACKER,
	TF_ANNOUNCER_CART_WARNING_DEFENDER,
	TF_ANNOUNCER_CART_FINALWARNING_ATTACKER,
	TF_ANNOUNCER_CART_FINALWARNING_DEFENDER,
	TF_ANNOUNCER_ARENA_ROUNDSTART,
	TF_ANNOUNCER_ARENA_FIRSTBLOOD,
	TF_ANNOUNCER_ARENA_FIRSTBLOOD_FAST,
	TF_ANNOUNCER_ARENA_FIRSTBLOOD_FINALLY,
	TF_ANNOUNCER_ARENA_CAPENABLED,
	TF_ANNOUNCER_ARENA_FLAWLESSVICTORY,
	TF_ANNOUNCER_ARENA_FLAWLESSVICTORY_TEAM,
	TF_ANNOUNCER_ARENA_FLAWLESSVICTORY_ENEMY,
	TF_ANNOUNCER_ARENA_TEAMSCRAMBLE,
	TF_ANNOUNCER_ARENA_LASTSTANDING,
	TF_ANNOUNCER_SUCCESS,
	TF_ANNOUNCER_FAILURE,
	TF_ANNOUNCER_SECURITYALERT,
	TF_ANNOUNCER_DOM_LEADGAINED,
	TF_ANNOUNCER_DOM_LEADLOST,
	TF_ANNOUNCER_DOM_TEAMGETTINGCLOSE,
	TF_ANNOUNCER_DOM_ENEMYGETTINGCLOSE,
	
	TF_ANNOUNCER_VIP_ENEMYSTOLEN,
	TF_ANNOUNCER_VIP_ENEMYDROPPED,
	TF_ANNOUNCER_VIP_ENEMYCAPTURED,
	TF_ANNOUNCER_VIP_TEAMSTOLEN,
	TF_ANNOUNCER_VIP_TEAMDROPPED,
	TF_ANNOUNCER_VIP_TEAMCAPTURED,
	TF_ANNOUNCER_VIP_RETURNED,
	TF_ANNOUNCER_VIP_KILLED,
	TF_ANNOUNCER_VIP_FRIENDLY_KILLED,

	TF_ANNOUNCER_MESSAGE_COUNT
};

class CTFAnnouncer : public CAutoGameSystem
{
public:
	CTFAnnouncer( const char *pszName );

	virtual bool Init( void );
	virtual void LevelInitPreEntity( void );

	const char *GetSoundForMessage( int iMessage );
	
#ifdef GAME_DLL
	void Speak( IRecipientFilter &filter, int iMessage );
	void Speak( int iMessage );
	void Speak( CBasePlayer *pPlayer, int iMessage );
	void Speak( int iTeam, int iMessage );
#else
	void Speak( int iMessage );
#endif

	enum
	{
		TF_ANNOUNCERTYPE_HELEN = 0,
		TF_ANNOUNCERTYPE_COUNT,
	};

	static const char *m_aAnnouncerSounds[TF_ANNOUNCERTYPE_COUNT][TF_ANNOUNCER_MESSAGE_COUNT];
};

extern CTFAnnouncer g_TFAnnouncer;

#endif // TF_ANNOUNCER_H
